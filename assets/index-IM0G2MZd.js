import{o as w,i as y,c as g,e as _,a as h,b as k,d as I}from"./opencv-helpers-BxTZ9GLj.js";import{m as x,_ as f,r as d,o as u,c as m,a as l,d as p,w as $,e as C,F as B,f as v,t as F,b,s as T}from"./index-CoFB_mhL.js";import"./onnxruntime-web-CTuRU3N_.js";const E={data(){return{brushType:"del",maskAndImage:x({originalImage:w.Mat})}},mounted(){this.enableDraw()},methods:{changeBrush(){this.brushType=this.brushType=="del"?"restore":"del"},enableDraw(){const a=this.$refs.maskCanvas,e=this.$refs.outputCanvas,s=a.getContext("2d",{willReadFrequently:!0});let t=!1,o=0,i=0;e.addEventListener("mousedown",n=>{t=!0,[o,i]=[n.offsetX,n.offsetY]}),e.addEventListener("mousemove",n=>{if(t){s.beginPath(),s.moveTo(o,i),s.lineTo(n.offsetX,n.offsetY),s.strokeStyle=this.brushType=="del"?"black":"white",s.lineWidth=8,s.lineCap="round",s.stroke();try{const r=y(a,"float32");g.blur(r,r,new g.Size(2,2));const c=_(this.maskAndImage.originalImage,r);h(e,c),c.delete(),r.delete()}catch(r){alert(String(r?.message||r)),console.error(r)}[o,i]=[n.offsetX,n.offsetY]}}),e.addEventListener("mouseup",()=>{t=!1}),a.addEventListener("mouseout",()=>{t=!1})},async setImage(a){this.maskAndImage?.originalImage?.delete?.();const e=await k(a);this.maskAndImage.originalImage=a;const s=this.$refs.outputCanvas,t=this.$refs.maskCanvas,o=_(a,e);h(s,o),h(t,e),o.delete(),e.delete()}},props:{}},P={class:"align-self-center"},V={ref:"outputCanvas"},A={style:{display:"none"},ref:"maskCanvas"};function L(a,e,s,t,o,i){const n=d("Button");return u(),m(B,null,[l("div",P,[l("canvas",V,null,512),l("canvas",A,null,512)]),p(n,{onClick:i.changeBrush},{default:$(()=>e[0]||(e[0]=[C("change brush")])),_:1},8,["onClick"])],64)}const S=f(E,[["render",L]]),D={data(){return{status:"",val:0,show:!1}},unmounted(){v.Instance.unsubscribeEmitter("modelLoading")},mounted(){v.Instance.subscribeEmitter("modelLoading",(a,e)=>{switch(a){case"download":{this.show=!0,this.val=Math.trunc(parseFloat(e)),this.status="Downloading model..";break}case"message":{this.status=e;break}case"finish":{this.show=!1;break}}})}},M={key:0,class:"overlay"},G={class:"inner-overlay col-11 md:col-7 p-4",style:{height:"70vh",border:"2px solid black",background:"white","border-radius":"15px"}},N={style:{"font-weight":"bold"}};function R(a,e,s,t,o,i){const n=d("ProgressBar");return o.show?(u(),m("div",M,[l("div",G,[l("p",N,F(o.status),1),e[0]||(e[0]=l("div",{class:"py-1"},null,-1)),p(n,{style:{height:"30px","border-radius":"20px"},value:o.val},null,8,["value"])])])):b("",!0)}const X=f(D,[["render",R],["__scopeId","data-v-2334895f"]]),Y={components:{ProgressView:X,MyImage:S},data(){return{loading:!1,img_src:void 0}},mounted(){crossOriginIsolated||(console.log("crossOriginIsolated off"),T()||alert("will be slow"))},methods:{async onInputFile(a){const e=a.target,s=e.files[0];if(s){e.value="",this.loading=!0;try{const t=await I(s);await this.$refs.output.setImage(t)}catch(t){throw alert(String(t?.message||t)),t}finally{this.loading=!1}}}}},O={style:{"text-align":"center"}},q={key:0};function z(a,e,s,t,o,i){const n=d("ProgressView"),r=d("my-image");return u(),m("div",O,[e[1]||(e[1]=l("h4",{class:"text-xl"},"App",-1)),l("input",{onChange:e[0]||(e[0]=(...c)=>i.onInputFile&&i.onInputFile(...c)),type:"file"},null,32),p(n),p(r,{ref:"output"},null,512),o.loading?(u(),m("p",q,"processing..")):b("",!0)])}const H=f(Y,[["render",z],["__scopeId","data-v-4d94a3c2"]]);export{H as default};
